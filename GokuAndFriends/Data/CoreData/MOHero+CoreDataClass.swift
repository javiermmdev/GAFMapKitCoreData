import Foundation
import CoreData

/// Core Data class generated by Xcode using Editor -> Create NSManagedObject Subclass
/// This requires the Core Data model to be selected in the project navigator.
@objc(MOHero)
public class MOHero: NSManagedObject {

}

extension MOHero {

    /// Fetch request for retrieving `MOHero` entities from Core Data
    @nonobjc public class func fetchRequest() -> NSFetchRequest<MOHero> {
        return NSFetchRequest<MOHero>(entityName: "CDHero")
    }

    @NSManaged public var id: String?            // Unique identifier for the hero
    @NSManaged public var name: String?          // Name of the hero
    @NSManaged public var info: String?          // Description or info about the hero
    @NSManaged public var favorite: Bool         // Indicates if the hero is marked as favorite
    @NSManaged public var photo: String?         // URL or path to the hero's photo
    @NSManaged public var locations: Set<MOLocation>? // Set of associated locations for this hero
    @NSManaged public var transformations: Set<MOTransformation>? // Set of associated transformations for this hero
}

// MARK: Generated accessors for locations

/// Accessor methods for the `locations` relationship, modified from `NSSet` to `Set<MOLocation>`
extension MOHero {

    @objc(addLocationsObject:)
    @NSManaged public func addToLocations(_ value: MOLocation)

    @objc(removeLocationsObject:)
    @NSManaged public func removeFromLocations(_ value: MOLocation)

    @objc(addLocations:)
    @NSManaged public func addToLocations(_ values: Set<MOLocation>)

    @objc(removeLocations:)
    @NSManaged public func removeFromLocations(_ values: Set<MOLocation>)

}

// MARK: Generated accessors for transformations

/// Accessor methods for the `transformations` relationship, modified from `NSSet` to `Set<MOTransformation>`
extension MOHero {

    @objc(addTransformationsObject:)
    @NSManaged public func addToTransformations(_ value: MOTransformation)

    @objc(removeTransformationsObject:)
    @NSManaged public func removeFromTransformations(_ value: MOTransformation)

    @objc(addTransformations:)
    @NSManaged public func addToTransformations(_ values: Set<MOTransformation>)

    @objc(removeTransformations:)
    @NSManaged public func removeFromTransformations(_ values: Set<MOTransformation>)

}

// MARK: - Identifiable Conformance

extension MOHero: Identifiable {

}
